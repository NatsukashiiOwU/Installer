name: Release
on:
  push:
    tags:
      - v*
  workflow_dispatch: # Optional: allows manual triggering

env:
  FORCE_COLOR: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2

      - name: Install Windows dependencies
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-go
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64

      - name: Install Go dependencies
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go get -v
          go install github.com/tc-hib/go-winres@latest

      - name: Build GUI version
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go-winres make --product-version "git-tag"
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -v -tags static -ldflags "-s -w -H=windowsgui -extldflags=-static -X 'vencordinstaller/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencordinstaller/buildinfo.InstallerTag=${{ github.ref_name }}'" -o VencordInstaller.exe

      - name: Build CLI (i386)
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -v -tags "static cli" -ldflags "-s -w -extldflags=-static -X 'vencordinstaller/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencordinstaller/buildinfo.InstallerTag=${{ github.ref_name }}'" -o VencordInstallerCli.exe

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: VencordInstaller-windows
          path: |
            VencordInstaller.exe
            VencordInstallerCli.exe

  release:
    runs-on: ubuntu-latest
    needs: [build-windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: VencordInstaller-windows
          path: windows

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: Auto-generated release for tag `${{ github.ref_name }}`
          draft: false
          prerelease: false
          files: |
            windows/VencordInstaller.exe
            windows/VencordInstallerCli.exe
